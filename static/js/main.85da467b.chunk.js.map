{"version":3,"sources":["components/useForm.js","components/btnToggle.js","components/validateInfo.js","components/FormSignUp.js","components/Form.js","App.js","index.js"],"names":["useForm","validate","useState","username","email","password","password2","gender","birthday","prephonenumber","phonenumber","agreement","values","setValues","errors","setErrors","handleChange","e","target","name","value","handleSubmit","preventDefault","BtnToggle","activebtn","btnindexs","id","btns","setActiveBtn","btnId","index","btnValue","activeBtnToggle","styleActiveBtnToggle","validateInfo","trim","test","length","FormSignUp","className","onSubmit","htmlFor","type","placeholder","onChange","map","elements","onClick","min","max","Form","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85da467b.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\r\n\r\nconst useForm = (validate) =>{\r\n    const [values, setValues] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        password2: '',\r\n        gender: '',\r\n        birthday: '',\r\n        prephonenumber:'010',\r\n        phonenumber: '',\r\n        agreement: ''\r\n    })\r\n    const [errors, setErrors] = useState({\r\n\r\n    })\r\n    const handleChange = e => {\r\n        const{name, value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        //formSignUp에서 validateInfo를 validate으로 가져옴 -> useForm(validate) -> validate(values)\r\n        setErrors(validate(values));\r\n    }\r\n\r\n    return{handleChange, values, handleSubmit, errors};\r\n};\r\n\r\nexport default useForm;","// import useForm from './useForm';\r\nimport React ,{useState} from 'react';\r\n\r\nconst BtnToggle = () => {\r\n    // const {handleChange, values, handleSubmit} = useForm();\r\n    const [btns, setActiveBtn] = useState({\r\n        activebtn: null,\r\n        btnindexs:[{id: 'male', value: '남자'},{id: 'female', value: '여자'}]\r\n    })\r\n    const btnId = (index) => {\r\n        return btns.btnindexs[index].id;\r\n    }\r\n    const btnValue = (index) =>{\r\n        return btns.btnindexs[index].value;\r\n    }\r\n\r\n    const activeBtnToggle = (index) =>{\r\n        setActiveBtn({\r\n            ...btns,\r\n            activebtn: btns.btnindexs[index]\r\n        })\r\n    }\r\n\r\n    const styleActiveBtnToggle = (index) =>{\r\n        if(btns.btnindexs[index] === btns.activebtn){\r\n            return \"form-lable-btn active\";\r\n        }else{\r\n            return \"form-lable-btn inactive\";\r\n        }\r\n    }\r\n    // function activeBtnToggle(index){\r\n    //     setActiveBtn({\r\n    //         ...btns,\r\n    //         activebtn: btns.btnindexs[index]\r\n    //     })\r\n    // }\r\n    return{btns, btnId, btnValue, activeBtnToggle, styleActiveBtnToggle};\r\n    // return(\r\n    //     <div className=\"form-btn-container gender\">\r\n    //         {btns.btnindexs.map((elements, index) => (\r\n    //             <label htmlFor=\"gender\" \r\n    //             className=\"form-lable-btn inactive\" \r\n    //             key={index} \r\n    //             onClick={()=>{activeBtnToggle(index)}}>\r\n    //                 {btnValue(index)}\r\n    //                 <input id={btnId(index)} type=\"radio\" name=\"gender\" value={btnValue(index)} onChange={handleChange}/>\r\n    //             </label> \r\n    //         ))}\r\n    //     </div>\r\n    // )\r\n};\r\n\r\nexport default BtnToggle;\r\n","export default function validateInfo(values){\r\n    let errors = {}\r\n\r\n    //아이디 ^문장 처음 $문장 마지막\r\n    if(!values.username.trim()){\r\n        errors.username = '아이디를 입력하세요:D';\r\n    }else if(!/^[a-zA-z0-9]{1,10}$/.test(values.username)){\r\n        //전역 매칭 플래그 g 대소문자 무시 플래그 i\r\n        errors.username = '아이디를 알파벳 1~10글자(특수문자X)!'\r\n    }\r\n\r\n    //이메일\r\n    if(!values.email){\r\n        errors.email = '이메일를 입력하세요:D';\r\n    }else if(!/\\S+@\\S+\\.\\S+/.test(values.email)){\r\n        errors.email = '이메일 형식에 맞지 않습니다!';\r\n    }\r\n\r\n    //비밀번호\r\n    if(!values.password){\r\n        errors.password = '비밀번호를 입력하세요:D';\r\n    }else if(values.password.length < 6){\r\n        errors.password = '비밀번호를 6자리 이상 입력해주세요!';\r\n    }else if(!/(?=.*\\d{1,50})(?=.*[~`!@#$%\\^&*()-+=]{1,50})(?=.*[a-zA-Z]{2,50}).{6,50}$/.test(values.password)){\r\n        errors.password = '영문 2개, 숫자, 특수문자 각각 1개 이상 입력해주세요!';\r\n    }\r\n\r\n    //비밀번호 재입력\r\n    if(!values.password2){\r\n        errors.password2 = '비밀번호를 다시 입력하세요:D';\r\n    }else if(values.password !== values.password2){\r\n        errors.password2 = '비밀번호가 같지 않습니다!';\r\n    }   \r\n\r\n    //성별\r\n    if(!values.gender){\r\n        errors.gender = '성별을 선택하세요:D';\r\n    }\r\n\r\n    //생일\r\n    if(!values.birthday){\r\n        errors.birthday = '생일을 입력하세요:D';\r\n    }\r\n\r\n    //전화번호\r\n    if(!values.phonenumber){\r\n        errors.phonenumber = '전화번호를 입력하세요:D';\r\n    }else if(!/-?[0-9]{3,4}-?[0-9]{4}/.test(values.phonenumber)){\r\n        errors.phonenumber = '7 또는 8자리 번호를 입력하세요!';\r\n    }\r\n\r\n    //동의\r\n    if(!values.agreement){\r\n        errors.agreement = '동의를 체크하세요:D';\r\n    }\r\n\r\n    return errors;\r\n\r\n}","import React, {useState} from 'react';\r\nimport useForm from './useForm';\r\nimport BtnToggle from './btnToggle';\r\nimport validate from './validateInfo';\r\nimport './FormSignUp.css';\r\n\r\nconst FormSignUp = () => {\r\n    const {handleChange, values, handleSubmit, errors} = useForm(validate);\r\n    const {btns, btnId, btnValue, activeBtnToggle, styleActiveBtnToggle} = BtnToggle();\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <div className=\"row\">\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <h1>회원가입</h1>\r\n                    <div className=\"form-input-container\">\r\n                        <label htmlFor=\"username\" className=\"form-label\"></label>\r\n                        <input id=\"username\" type=\"text\" name=\"username\" className=\"form-input\" placeholder=\"아이디\" value={values.username} onChange={handleChange}/>\r\n                        {errors.username && <p>{errors.username}</p>}\r\n                    </div>\r\n                    {/* {errors.username && <p>{errors.username}</p>} */}\r\n                    <div className=\"form-input-container\">\r\n                        <label htmlFor=\"password\" className=\"form-label\"></label>\r\n                        <input id=\"email\" type=\"email\" name=\"email\" className=\"form-input\" placeholder=\"이메일\" value={values.email} onChange={handleChange}/>\r\n                        {errors.email && <p>{errors.email}</p>}\r\n                    </div>\r\n                        {/* {errors.email && <p>{errors.email}</p>} */}\r\n                    <div className=\"form-input-container\">\r\n                        <label htmlFor=\"password\" className=\"form-label\"></label>\r\n                        <input id=\"password\" type=\"password\" name=\"password\" className=\"form-input\" placeholder=\"비밀번호\" value={values.password} onChange={handleChange}/>\r\n                        {errors.password && <p>{errors.password}</p>}\r\n                    </div>\r\n                        {/* {errors.password && <p>{errors.password}</p>} */}\r\n\r\n                    <div className=\"form-input-container\">\r\n                        <label htmlFor=\"password2\" className=\"form-label\"></label>\r\n                        <input id=\"password2\" type=\"password\" name=\"password2\" className=\"form-input\" placeholder=\"비밀번호 확인\" value={values.password2} onChange={handleChange}/>\r\n                        {errors.password2 && <p>{errors.password2}</p>}\r\n                    </div>\r\n                        {/* {errors.password2 && <p>{errors.password2}</p>} */}\r\n                \r\n                    {/* <BtnToggle/> */}\r\n                    <div className=\"form-input-container gender\">\r\n                        {btns.btnindexs.map((elements, index) => (\r\n                            <label htmlFor=\"gender\" \r\n                                    className={styleActiveBtnToggle(index)} \r\n                                    key={index} \r\n                                    >\r\n                                    {btnValue(index)}\r\n                                 {/* <div className=\"bg\"></div> */}\r\n                                <input id={btnId(index)} type=\"radio\" name=\"gender\" className=\"form-input\" value={btnValue(index)} onChange={handleChange} key={index} onClick={()=>{activeBtnToggle(index)}}/>\r\n                            </label> \r\n                        ))}\r\n                        {errors.gender && <p>{errors.gender}</p>}\r\n                    </div>\r\n                        {/* {errors.gender && <p>{errors.gender}</p>} */}\r\n                    <div className=\"form-input-container birthday\">\r\n                        <label htmlFor=\"birthday\" className=\"form-label\">생일</label>\r\n                        <input id=\"birthday\" type=\"date\" name=\"birthday\" className=\"form-input\" min=\"1900-01-01\" max=\"2020-12-31\" value={values.birthday} onChange={handleChange}/>\r\n                        {errors.birthday && <p>{errors.birthday}</p>}\r\n                    </div>\r\n                        {/* {errors.birthday && <p>{errors.birthday}</p>} */}\r\n                    <div className=\"form-input-container phonenumber\">\r\n                        <label htmlFor=\"phonenumber\" className=\"form-label\">전화</label>\r\n                        <select className=\"prephonenumber\" name=\"prephonenumber\" id=\"prephonenumber\" value={values.prephonenumber} onChange={handleChange}>\r\n                            <option value=\"010\">010</option>\r\n                            <option value=\"011\">011</option>\r\n                            <option value=\"110\">110</option>\r\n                        </select>\r\n                        <input id=\"phonenumber\" type=\"text\" name=\"phonenumber\" className=\"form-input\"  value={values.phonenumber} onChange={handleChange}/>\r\n                        <button type=\"submit\" className=\"form-input-btn\" >인증</button>\r\n                        {errors.phonenumber && <p>{errors.phonenumber}</p>}\r\n                    </div>\r\n                        {/* {errors.phonenumber && <p>{errors.phonenumber}</p>} */}\r\n                    <div className=\"form-input-container agreement\">\r\n                        <label htmlFor=\"agreement\" className=\"form-label\">모든 약관 내용에 동의 합니다.</label>\r\n                        <div className=\"toggle-btn-container\">\r\n                            <div className=\"checkbox-bg\"></div>\r\n                            <input type=\"checkbox\" className=\"form-input checkbox-invisible\" name=\"agreement\" value=\"동의\" onChange={handleChange}/>\r\n                            <div className=\"checkbox-circle\"></div>\r\n                        </div>\r\n                        {errors.agreement && <p>{errors.agreement}</p>}\r\n                    </div>\r\n                        {/* {errors.agreement && <p>{errors.agreement}</p>} */}\r\n                    <div className=\"form-btn-container signup\">\r\n                        <button className=\"form-btn\" type=\"submit\">가입하기</button>\r\n                    </div>\r\n                    {/* <span className=\"form-input-container login\">\r\n                        이미 계정이 있습니까?\r\n                        <a href=\"#\">로그인</a>\r\n                    </span> */}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormSignUp\r\n","import React from 'react'\r\nimport FormSignUp from './FormSignUp'\r\n\r\nconst Form = () => {\r\n    return (\r\n        <div>\r\n            <FormSignUp />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","// import './App.css';\nimport Form from './components/Form';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}