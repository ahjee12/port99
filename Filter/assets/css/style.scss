*{margin: 0; padding: 0;}
.clearfix::before,.clearfix::after{content: ''; display: block; clear: both;}
body{
/*   background: #e1715e; */
/*   background: #eeb09e; */
/*   background: #a6b6c1; */
    background: #2671b9 ;
    font-family: 'Red Hat Display', sans-serif;
}

/* 폼 */
.controls{padding: 30px; background: #ffe033;}
fieldset{
  float: left;
  padding: 10px 20px;
  background: #afafaf;
  border-radius: 13%;
  margin: 0 10px 0 0;
    h4{font-weight: 900; font-size: 30px;}
    .checkbox{
        cursor: pointer;
        margin: 0 0 10px 0;
        overflow: hidden;
        position: relative;
        input[type="checkbox"]{
            cursor: pointer;
            width: 25px; height: 25px;
            // display: inline-block;
            float: left;
            opacity: 0;
            z-index: 2;
            // padding: 0 74px 0 0 ;
            //width, height 100% 신기함
            position: absolute; width: 100%; height: 100%;
        }
        label{font-weight: 500; font-size: 22px; 
            cursor: pointer; 
            // display: inline-block; 
            padding: 0px 3px 0px 33px; 
            float: left;

            //label에 가상요소 준 이유: input을 opacity 0으로 하면 input의 가상요소도 적용됨... 따로  
            &:before{content: ''; display: block; position: absolute; left: 0; top: 0; width: 25px; height: 25px; background: #a8ff8f; border-radius: 5px; pointer-events: none;}
            &:after{content: ''; display: block; position: absolute; left: 5px; top: 5px; width: 15px; height: 15px; background: #0db69f; border-radius: 5px; display: none; pointer-events: none;}
        }
        //script로 할 수도 있음
        input:checked ~ label:after{
            display: block;
        }
        
    }
    
}

button{
    font-weight: 500;
    font-size: 20px;    
    padding: 7px;  
    border-radius: 10px;
    cursor: pointer;
    // border: none;
    border: 2px solid #000;
    box-shadow: 0 0 2px 1px rgba(0,0,0,0.5);
    outline: none;
}

// .container {
//     padding: 2%;
//     text-align: justify;
//     position: relative;
// }

.container {
    padding: 2%;
    // text-align: justify;
    // display: flex;
    // justify-content: space-between;
    // align-items: center;
    // flex-wrap: wrap;;
    position: relative;
    overflow: hidden;
}
.fail-message span{
    position: absolute; left: 50%; top: 40%; transform: translate(-50%,-50%);
    font-size: 60px;
    text-align: center;
    width: 100%;
}

.container .box
{
    // flex-basis: 19%; 
    float: left;
    width: 19.2%; margin: 0 1% 1% 0;
    height: 200px; 
    background: #d3d3d3;
    display: flex; 
    align-items: center;
    justify-content: center;
    box-sizing: border-box;

    transition: all 0.3s;
}
.container .box:nth-child(5n + 1)
{
   margin: 0 0 0 0;
}

.container box.hide{
    display: none;
    // width: 0%;
}
.container box.pick{
    width: initial;
}

.container .mix
{ 
    width: 150px; height: 150px; background: #fff; 
    // box-sizing: border-box;
    // margin: 0 auto;
}

.container .mix.circle{border-radius: 50%;}
.container .mix.triangle{
    width: 0; height: 0; border: 75px solid #fff; 
    border-right-color: transparent;
    border-top-color: transparent; 
    background: none;
    // box-sizing: border-box;
}

.container .mix.triangle.orange{ border-color: #ff4800;  border-right-color: transparent; border-top-color: transparent;  }
.container .mix.square.orange{ background: #ff4800;}
.container .mix.circle.orange{ background: #ff4800;}

.container .mix.triangle.blue{ border-color: #64b9ff;  border-right-color: transparent; border-top-color: transparent;  }
.container .mix.square.blue{ background: #64b9ff;}
.container .mix.circle.blue{ background: #64b9ff;}

.container .mix.triangle.small{border-width: 50px;}
.container .mix.square.small{width: 100px; height: 100px;}
.container .mix.circle.small{width: 100px; height: 100px;}
// .container .box.blue{ background: #45a6f5;}

